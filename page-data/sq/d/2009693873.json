{"data":{"jobs":{"edges":[{"node":{"frontmatter":{"title":"Software Developer","company":"TTI","location":"Bryan, TX","range":"March - December 2024","url":"https://tti.tamu.edu/"},"html":"<ul>\n<li>Engineered a microservice, handling submission and queuing of 5000+ image processing requests per month using RabbitMQ, Spring Boot, Docker, Kubernetes, Java, Python, AWS S3</li>\n<li>Designed and implemented the customer facing website handling user and admin requests using NextJS, React and TailwindCSS</li>\n<li>Reduced the monthly AWS bill of services by implementing S3 lifecycle policies, reducing storage costs by 5% across web services</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Software Engineer","company":"Cisco","location":"Bengaluru, Karnataka","range":"Aug 2021 - July 2023","url":"https://www.cisco.com/"},"html":"<ul>\n<li>Developed microservices using spring boot for cisco optical network planner tool, enabling real-time bill of material generation for different network configurations</li>\n<li>Architected and implemented a proof of concept for a real-time network monitoring tool handling 2 gigabytes of streaming data per second using Kafka, reducing troubleshooting time significantly and enabling real-time issue detection</li>\n<li>Optimized the scheduling algorithm of optical line systems to decrease network failure detection time, resulting in a 33% improvement in detection speed</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Software Engineer Intern","company":"Cisco","location":"Bengaluru, Karnataka","range":"Feb - June 2021","url":"https://www.cisco.com/"},"html":"<ul>\n<li>Designed and developed a modular vendor firmware testing framework using Python and CI/CD Jenkins pipelines to reduce testing effort resulting in a 80% increase in optical network testing efficiency</li>\n<li>Collaborated with 3rd party vendor team and delivered firmware testing framework to enhance firmware drop quality</li>\n<li>Streamlined the firmware integration from 3rd party vendor into the cisco optical network devices reducing the number of testing cycles from 5 to 2 in a release</li>\n</ul>"}}]}}}